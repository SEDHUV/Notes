To Run TestnG xml file from terminal:(maven help)
install apache maven and configure it in enviromnmental variables.
set maven compiler to 11(for mine its java 11)or source target method 1.8(refer project)
1.add maven surefire plugin to pom.xml (if you add your test in maven plugin itself)->it will run that particular test
or else if u want to run your profiles specific you need to create a profile in pom.xml (refer selenium framework project)
2. go to the project path in terminal or cmd:
cmd-> mvn test (run that specific plugin test)
cmd->mvn test -P(profilename)->run that specific profile in pom.xml
cmd->mvn test -P(profilename) -Dbrowser=chrome(giving chrome options from system property)note:we can give headless also (refer project-> set size if it's headless)

Jenkins download:
1.download generic java war package(see requirements in page)
2.go to jenkins download directory in cmd(C:\Users\SEDHU\Jenkins):
cmd->java -jar jenkins.war --httpPort=8080 (we can change the port)
once it ran go to -> http://localhost:8080 
->enter credentials mine(
username:SEDHUV
PW:Sedhu@14
SEDHU ->NAME)
creating new job in jenkins:
->create a new item ->freestyle->our code is in local system so select advanced->use custom workspace->give project path->go to Build-> add maven targets-> give cmd what you gave in terminal(no need to give mvn as it is already maven) e.g: test -p(profilename)

parameterize chrome and profile :
1. go to configure
2. go to this project is parametrized->select->add parameter->choice parameter
3.give the name what u want in choice
e.g: in name-> browsername
in choices -> give all the options(chrome,firefox,edge)
same for profile

in cmd->test -P"$profile" -Dbrowser="$browsername"


CI/CD:

photo attached in rahulshetty folder
1.push code to github
2.in github-> webhook will trigger and it will trigger jenkins job .

setting github:

go to project directory which u want to push in cmd
in cmd 
 go to project path 
git init(create connection local and remote repository)
git checkout -b main (create a new branch)
git status (check status)
git add .
git commit -m "commit"
git remote add origin (github path)
git push origin main(if asked give credentials)

Jenkins settings: add plugins it will when u install jenkins
by default maven plugin will not be there you need to go to manage plugins and availabe plugins -> search maven integration -> install(if u face sunsecurity issue go to system in manage plugins ->go to url change https to http)
1.whenever u add plugins restart jenkins in cmd
2.create a new item as maven project (bcoz it is remote repository we don't have any connection with local need to install maven also like in above step)
3.source code management->git->give git address->
4.in credentials->add->kind->secret text
for secret text:
go to github->go to account->settings->developer settings->personal access tokens -> tokens (classic)->generate a new token->generate new token(classic)->select all permissions-> give note name ->generate token->secret text will create ->copy that

5.paste secret code in jenkins secret
6.give random id and decription->add
7.branch -> */main(I pushed to main branch in github)
8.build triggers-> check github hook trigger for GITSCm polling option->it will ask you to give maven path it's ok ->save
9.manage jenkins->tools->add maven -> uncheck install automatically(as i have already maven in system)-> 
give version(3.9.5) in name option->
maven home->C:\Users\SEDHU\Downloads\apache-maven-3.9.5-bin\apache-maven-3.9.5

->save

go to job->configure
in goals and options->give the cmd: test -P(PROFILENAME)
run test -> it will download code from github and run according what you gave in goals and options.

to configure webhooker with jenkins so it will test the code whatever we are pushing in git:
github->repository->settings->webhook->add new webhook->payload url(usually in this url only jenkins will listen and it will only accept public url and not localhost what we are using for that we are going to install ngrok software and try to change the localhost to public url)

go to jenkins->system->go to github->select advanced->check specify another hook url for github configuration and copy that url and uncheck that option

example: it will be like http://localhost:8080/github-webhook/

in jenkins-> don't save anything ->comeback to dashboard->popup will come->give leave option

go to configure in job and in build triggers make sure you checked github hook trigger option

changing localhost to public :
search ngrok in google-> go to first option-> sign up->there will be a option for ngrok for windows download that zip.
extract and run exe.file
you will see terminal open where u need to authenticate
for that copy code from ngrok page (it is mentioned like authtoken to default ngrok)
paste in terminal and ok

copy third command from ngrok page 
from your terminal with ngrok path level-> paste that 3rd command(it will be ngrok http http://localhost:8080(if u using 9090 give that) and ok

it will open new terminal and give the new public address in forwarding option

copy that public address and replace in github 
e.g: http://localhost:8080/github-webhook/ -> this will change to copied public address/github-webhook/

and also give that secret which you copied from github early and add webhook and refresh the page it will give tick if it is valid.

now do some small things in your project and save.
go to project directory which u want to push in cmd (it will be at the top where we created local repository)
in cmd 
git status (check status)
git add * or git add (that file path)
git commit -m "commit"
git push origin main(if asked give credentials)(don't need to add origin bcoz we already configured)

after pushed to github -> webhook will trigger and will see security options have valid integrity(secret message) and it tells jenkins to run the test bcoz we pushed new code)

now jenkins will run.

NOTE 1: when you have jenkins already in your machine and if u want to install new jenkins first delete .jenkins file which created in your local c (mostly and sometimes it will be hidden so check show hidden files option) and delete war file and start how you do usually like running war file in terminal.

NOTE2: once you run ngrok.exe file in your system and gave authentication from next tym if u want to change any localhost id to public -> simply go to that path(where exe file is there) give cmd->ngrok http http://localhost:8080( third command which we copied from ngrok webpage)
 
























